import { createRouter, createWebHistory } from 'vue-router';
import Login from '@/views/Login.vue';
import Cabinet from '@/views/Cabinet.vue';
import { jwtDecode } from 'jwt-decode';

const routes = [
  {
    path: '/',
    name: 'Login',
    component: Login,
    beforeEnter: (to, from, next) => {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º –≤ —Å–∏—Å—Ç–µ–º—É...');
      if (isAuthenticated()) {
        console.log('üü¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–±–∏–Ω–µ—Ç.');
        next('/cabinet');
      } else {
        next();
      }
    },
  },
  {
    path: '/cabinet',
    name: 'Cabinet',
    component: Cabinet,
    meta: { requiresAuth: true },
  },
];

const router = createRouter({
  history: createWebHistory(),
  routes,
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
function isAuthenticated() {
  const token = localStorage.getItem('accessToken');
  if (!token) {
    console.log('üî¥ –ù–µ—Ç accessToken –≤ localStorage');
    return false;
  }

  try {
    const decoded = jwtDecode(token);
    const now = Date.now() / 1000;

    if (decoded.exp > now) {
      console.log('üü¢ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω');
      return true;
    } else {
      console.warn('üü† –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫');
      localStorage.removeItem('accessToken'); // –£–¥–∞–ª—è–µ–º –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω
      return false;
    }
  } catch (error) {
    console.error('üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:', error);
    return false;
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –º–∞—Ä—à—Ä—É—Ç–æ–≤
router.beforeEach((to, from, next) => {
  console.log(`üöÄ –ù–∞–≤–∏–≥–∞—Ü–∏—è: ${from.path} ‚Üí ${to.path}`);

  if (to.meta.requiresAuth) {
    if (!isAuthenticated()) {
      console.warn('üî¥ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞.');
      next('/');
    } else {
      next();
    }
  } else {
    next();
  }
});

export default router;
